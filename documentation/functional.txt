Here is the detailed Functional Requirement Document (FRD) based on the provided Business Requirement Document (BRD):

**FR-ETL-001: Load Raw Data to Bronze Layer**

1. **Requirement ID**: FR-ETL-001
2. **Title**: Load Raw Customer and Order Data to Bronze Layer
3. **Description**: The system must ingest raw Customer and Order data from CSV files stored in Unity Catalog Volumes and load it into the Bronze layer.
4. **Preconditions**:
	* Unity Catalog Volumes contain CSV files with Customer and Order data.
	* Catalog "bronzezone", schema "data" exist or can be created.
5. **Main Flow / Functional Steps**:
	* Create catalog "bronzezone" and schema "data" if they do not exist.
	* Ingest CSV files using Delta Live Table syntax and Auto Loader (cloud_files with format="csv").
	* Load Customer data into `bronzezone.data.customer_raw` table with SCD type-2, keeping history, using watermark columns, and creating CreateDateTime, UpdateDateTime, and IsActive flag.
	* Load Order data into `bronzezone.data.orders_raw` table with SCD type-2, keeping history, using watermark columns, and creating CreateDateTime, UpdateDateTime, and IsActive flag.
	* Write upsert logic to update existing records and insert new records.

**FR-ETL-002: Load Data to Silver Layer**

1. **Requirement ID**: FR-ETL-002
2. **Title**: Load Data to Silver Layer and Apply SCD Type 2
3. **Description**: The system must load data from Bronze layer, join Customer and Order data, remove null and duplicate records, and apply SCD type 2 to create a combined Silver layer table.
4. **Preconditions**:
	* Bronze layer tables `bronzezone.data.customer_raw` and `bronzezone.data.orders_raw` exist and contain data.
	* Catalog "silverzone", schema "data" exist or can be created.
5. **Main Flow / Functional Steps**:
	* Load data from `bronzezone.data.customer_raw` and `bronzezone.data.orders_raw` tables using Delta Live Table syntax and Auto Loader (cloud_files).
	* Join Customer and Order data on the "id" column.
	* Remove records with null values.
	* Remove duplicate records.
	* Apply SCD type 2 using "id" as primary key, keeping history, using watermark columns, and creating CreateDateTime, UpdateDateTime, and IsActive flag.
	* Write upsert logic to update existing records and insert new records.
	* Load combined data into `silverzone.data.customer_order_combined` table.

**FR-ETL-003: Load Data to Gold Layer**

1. **Requirement ID**: FR-ETL-003
2. **Title**: Load Data to Gold Layer and Aggregate Metrics
3. **Description**: The system must load data from Silver layer, aggregate metrics, and create a summary table in the Gold layer.
4. **Preconditions**:
	* Silver layer table `silverzone.data.customer_order_combined` exists and contains data.
	* Catalog "goldzone", schema "data" exist or can be created.
5. **Main Flow / Functional Steps**:
	* Load data from `silverzone.data.customer_order_combined` table using Delta Live Table syntax and Auto Loader (cloud_files).
	* Group data by "age" or "email domain".
	* Aggregate metrics: Total revenue and Average order amount.
	* Create CreateDateTime, UpdateDateTime, and IsActive flag.
	* Write upsert logic to update existing records and insert new records.
	* Load aggregated data into `goldzone.data.customer_order_summary` table.

**FR-ETL-004: Manage Unity Catalog Objects and ACL**

1. **Requirement ID**: FR-ETL-004
2. **Title**: Manage Unity Catalog Objects and ACL
3. **Description**: The system must create and manage Unity Catalog objects and provide separate ACL code to manage access.
4. **Preconditions**:
	* Unity Catalog is set up and configured.
5. **Main Flow / Functional Steps**:
	* Create catalogs, schemas, and tables as required.
	* Provide separate ACL code to manage access to Unity Catalog objects.

**FR-ETL-005: Enable Real-time Streaming Ingestion and Incremental Load**

1. **Requirement ID**: FR-ETL-005
2. **Title**: Enable Real-time Streaming Ingestion and Incremental Load
3. **Description**: The system must enable real-time streaming ingestion with incremental load enabled in all objects.
4. **Preconditions**:
	* Data is being ingested into the Bronze layer.
5. **Main Flow / Functional Steps**:
	* Enable Auto Loader checkpointing to handle version-aware ingestion.
	* Ensure that only new or changed records are ingested during reruns.

**FR-ETL-006: Generate Metadata, Tests, and Directory Structure**

1. **Requirement ID**: FR-ETL-006
2. **Title**: Generate Metadata, Tests, and Directory Structure
3. **Description**: The system must generate metadata, tests, and directory structure for the ETL pipeline.
4. **Preconditions**:
	* ETL pipeline is set up and configured.
5. **Main Flow / Functional Steps**:
	* Generate metadata for the ETL pipeline.
	* Create tests to validate the ETL pipeline.
	* Create a directory structure to organize the ETL pipeline components.